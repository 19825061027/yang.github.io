#+INCLUDE: "../../prefix.org"

#+TITLE: 使用BHT进行分支预测 翻译

10.1.4.1 Branch Direction Prediction using the Branch History
P8 core采用3个BHT预测分支方向；第一个表叫做local predictor，和传统BHT类似，可存储16K个条例，通过含有分支预测指令的地址进行索引，也就是说，这个表里面的条项，统统都是存储的过往分支的预测值，通过分支所在地址进行索引，因此，可以获取到上次这个分支的方向，而预测由2-bit组成的预测器，相比于1-bit预测器，增加了惰性，因为分支大多数是朝向一个方向的；2-bit中的第一个bit，指明分支结果是taken还是not-taken；
第二个表叫做global predictor，基于到达分支处所执行过的真实路径，来全局式地记录过往，进行预测；详细实现看文档；
第三个表叫做selector table，保存着上面两种预测策略针对一个分支哪个工作的更好；用来再local & global预测结果中选择一个；索引方式和local predictor一样；只有1bit，没有惰性；

当分支执行执行完，更新BHT，反映出最新、最准确的信息；
无条件分支(including branches with the BO field set to 1z1zz)和静态预测条件分支(such as, branches with the 'a' bit set to 1)不占据BHTs，因此他们不会触发BHT更新；

上述三个BHTs都以banked arrays进行实现，允许并发读写操作；针对不同banks的并发访问，都会执行；
如果发生了bank conflict，读操作具有更高优先级；
BHT更新逻辑将会 perform multiple write updates speculatively up to 5 attempts before forcing a hole in the fetch logic to allow the write to be done.
