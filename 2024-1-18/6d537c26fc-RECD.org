#+INCLUDE: "../../prefix.org"

#+TITLE: 宏里面无法直接使用sizeof                        

https://www.coder.work/article/1558363
不被允许的形式：
#+begin_src c
  #if sizeof(someThing) != PAGE_SIZE
  #error Data structure doesn't match page size
  #endif
#+end_src

linux kernel提供有如下方法：
用在全局的：static_assert();
#+begin_src c
  static_assert(NSIGSYS	== 2);
  static_assert(sizeof(siginfo_t) == 128);
  static_assert(__alignof__(siginfo_t) == 4);
  static_assert(offsetof(siginfo_t, si_signo)	== 0x00);
#+end_src
用在函数内：BUILD_BUG_ON();
#+begin_src c
  void __init mem_init(void)
  {
	  memblock_free_all();
	  highmem_init();

	  BUILD_BUG_ON((PTRS_PER_PGD * sizeof(pgd_t)) > PAGE_SIZE);
	  BUILD_BUG_ON((PTRS_PER_PUD * sizeof(pud_t)) > PAGE_SIZE);
	  BUILD_BUG_ON((PTRS_PER_PMD * sizeof(pmd_t)) > PAGE_SIZE);
	  BUILD_BUG_ON((PTRS_PER_PTE * sizeof(pte_t)) > PAGE_SIZE);
  }
#+end_src
以及函数内：compiletime_assert():
#+begin_src c
  static int ec_input_read(struct ariel_pwrbutton *priv,
			   struct ec_input_response *response)
  {
	  u8 read_request[] = { 0x00, 0x5a, 0xa5, 0x00, 0x00 };
	  struct spi_device *spi = priv->client;
	  struct spi_transfer t = {
		  .tx_buf = read_request,
		  .rx_buf = response,
		  .len = sizeof(read_request),
	  };

	  compiletime_assert(sizeof(read_request) == sizeof(*response),
			     "SPI xfer request/response size mismatch");

	  return spi_sync_transfer(spi, &t, 1);
  }
#+end_src
另外BUILD_BUG_ON()的一种实现是：
#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))
当condition为true时，会求一个sizeof(char[-1])的大小，会报错
condition为false时，不会。