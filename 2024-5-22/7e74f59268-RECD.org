#+INCLUDE: "../../prefix.org"

#+TITLE: blog 方案                                     

* 需求
1. 文档，也就是数据源是一个文件，采用 =org-mode= 方式，每一个文章标题格式如下：
   [[file:images/Day_Done/2024-05-22_14-54-04_screenshot.png]]
   level | status | date | title | tags
2. 尽量采用 =emacs org-mode= 自带功能实现，因此，外带脚本只实现将这一个大的数据源，拆分成多个小的数据源，再使用 =emacs '--batch'= 命令，将 =org= 转成 =html= 。
3. 转换过程中的所有配置，除非万不得已，全部采用 =org-mode= 自带配置方式实现，也就是 =#+OPTIONS= 这种，以及 =HTML= 特有的，如 =#+HTML_HEAD= 。
4. =tags= 分类不同文档。展示顺序按字母排序，特殊的、存放杂类的使用 =others= 表示，永远在最后面。
5. 同一 =tags= 内部采用日期排序。
6. 由于调用 =emacs= 生成过程会跑一遍 =emacs= 配置文件，因此这里有点慢。尽可能将 =emacs= 的调用次数稳定在一次。并且按需生成。

* 处理脚本
1. 采用如下数据结构表示每篇文章
   #+begin_src python
from dataclasses import dataclass
@dataclass
class Diary:
    status: str
    date: datetime
    title: str
    tags: list
    content: str
    show: bool
   #+end_src
2. 解析数据源，生成 =Diary= 列表。
3. 过滤部分不便展示文章。
4. 对 =content= 进行处理，之后根据依赖内容生成文件名，将 =content= 写入文件。
5. 拷贝 =css/js= 到对应目录(全部采用本地方案，速度可能稍慢)
6. 根据 =Diary= 列表生成 =index.org= ，采用 =org-mode table= 表示每个文章。
7. =org= 转 =html=
   
* 问题和改进
1. 转换优化：文件名采用 =hash= 方式建立依赖关系，当依赖内容变动时，算出的 =hash= 也会变，就重新生成目标文件。
   
   缺点：文件名一直在变动，无法使用一个链接看到后续变更。
   
2. 问题：标准 =css/js= 表示的 =index.html= 界面，不同分类里面的表格宽度不一样。
   解决：外加一个 =css= 文件，强制所有 =table > tr > td:nth-child(n)= 宽度固定。
   
   
