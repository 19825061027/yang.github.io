#+INCLUDE: "../../prefix.org"

#+TITLE: format/event/cpumask中struct attribute*数字以NULL结尾

perf_pmu_register 
--> pmu_dev_alloc/dev->groups = pmu->attr_groups
--> device_add
--> device_add_attrs
--> device_add_groups
--> sysfs_create_groups
--> internal_create_groups
--> internal_create_group
--> create_files
#+begin_src c
  static int create_files(struct kernfs_node *parent, struct kobject *kobj,
			  kuid_t uid, kgid_t gid,
			  const struct attribute_group *grp, int update)
  {
	  struct attribute *const *attr;
	  struct bin_attribute *const *bin_attr;
	  int error = 0, i;

	  if (grp->attrs) {
		  for (i = 0, attr = grp->attrs; *attr && !error; i++, attr++) {
			  umode_t mode = (*attr)->mode;

			  /*
			   ,* In update mode, we're changing the permissions or
			   ,* visibility.  Do this by first removing then
			   ,* re-adding (if required) the file.
			   ,*/
			  if (update)
				  kernfs_remove_by_name(parent, (*attr)->name);
			  if (grp->is_visible) {
				  mode = grp->is_visible(kobj, *attr, i);
				  if (!mode)
					  continue;
			  }

			  WARN(mode & ~(SYSFS_PREALLOC | 0664),
			       "Attribute %s: Invalid permissions 0%o\n",
			       (*attr)->name, mode);

			  mode &= SYSFS_PREALLOC | 0664;
			  error = sysfs_add_file_mode_ns(parent, *attr, mode, uid,
							 gid, NULL);
			  if (unlikely(error))
				  break;
		  }
		  if (error) {
			  remove_files(parent, grp);
			  goto exit;
		  }
	  }
   exit:
	  return error;
  }

#+end_src
