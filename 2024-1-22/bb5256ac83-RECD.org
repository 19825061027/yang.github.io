#+INCLUDE: "../../prefix.org"

#+TITLE: 驱动BUG总结                                  

最容易犯的错误：
1. 因为代码体积太大，导致有些变量在还没有赋值时候就使用了
2. 编译时的宏，用到了运行时。典型错误：
   #+begin_src c
     static int ni_event_attr_init(struct device *dev,
				   struct ni_event_attr *eattr,
				   struct ni_node *node,
				   struct ni_event_desc* desc)
     {
	     struct attribute *attr;
	     const char *name;

	     attr = &eattr->attr.attr;
	
	     sysfs_attr_init(attr);
	
	     eattr->ev_desc = desc;
	     eattr->node = node;

	     if(desc && node)
		     name = devm_kasprintf(dev,
					   GFP_KERNEL,
					   "%s_%d_%s",
					   ni_node_name[node->type],
					   node->id,
					   desc->name);
	     else if(!desc && !node)
		     name = "cycles";
	     else {
		     pr_err("No such type attr.");
		     return -EINVAL;
	     }
		
	
	     if(!name)
		     return -ENOMEM;

	     eattr->attr = (struct device_attribute)__ATTR(name, 0444, ni_event_show, NULL); // 导致最后所有的name都是字符串"name".

	     return 0;
     }
   #+end_src
3. 声明的指针还没赋值，当函数内栈上实例来使用。
4. 赋值时会覆盖已经赋值的内容：
   #+begin_src c
     struct S1 {
	     int a;
	     int b;
     };

     struct S1 *s = kzalloc(sizeof(*s), GFP_KERNEL);
     s->a = 1;
     ,*s = (struct S1) {
	     .b = 2,
     };

     // 最后S.a == 0
   #+end_src
