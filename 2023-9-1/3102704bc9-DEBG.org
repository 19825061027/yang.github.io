#+INCLUDE: "../../prefix.org"

#+TITLE: PowerPC 架构学习以及处理器idle相关内容学习

1. console问题之前已解决；
2. 在rcS中写上mount -a 或 /bin/mount -a 就会卡死在rcS执行之后，打印Please press Enter to activate this console.之前；

* Registers
1. PowerPC ISA publiced in 1993, is a 64-bit spec including 32-bit.
2. 寄存器：
   - GPR，32个通用寄存器
   - PC，程序计数器，也称IAR/指令地址寄存器或者NIP/下一指令指针
   - LR，链接寄存器
   - FPSCR，浮点状态和控制寄存器
   - CTR，计数寄存器
   - FPR，浮点寄存器
   - CR，条件寄存器
3. 两个运行级别：
   - 用户模式：可访问GPR，FPR，CR，FPSCR，LR，CTR，XER以及TBL/TBU，DCR可以访问；
   - 特权模式
4. 指令中，i后缀代表立即数，s后缀表示左移16位，如addi, addis, ori, oris等；
5. 配置寄存器
   | 配置寄存器 | 作用                                   |
   |------------+----------------------------------------|
   | HID0-HID2  | 硬件实现寄存器                         |
   | MSR        | 机械状态寄存器(用来配置微处理器的设定) |
   | MBAR       | 存储器基址寄存器                       |
   | SVR        | 系统处理器                             |
   | PVR        | 版本寄存器                             |
6. 存储管理寄存器
   | 存储管理寄存器                  | 作用                    |
   |---------------------------------+-------------------------|
   | LBATOU/LBATOL/LBAT3U/LBAT3L     | 指令BAT寄存器           |
   | DBATOU/DBATOL/DBAT3U/DBAT3L     | 数据BAT寄存器           |
   | DMISS/DCMP/HASH1/HASH2/ICMP/RPA | 软件表搜索寄存器        |
   | SDR1                            | SDR1                    |
   | SR0-15                          | 段寄存器                |
   | SPRG0-7                         | 中断处理寄存器          |
   | DSISR                           | DSISR                   |
   | SRP0 SRP1                       | 保存恢复寄存器          |
   | DEC                             | 多功能寄存器            |
   | CSRR0-1                         | 紧急中断寄存器          |
   | DAR                             | 数据地址寄存器          |
   | TBL-TBU                         | 时基设施(writable)      |
   | IABR/IABR2/DABR/DABR2           | 指令/数据地址断点寄存器 |
   | IBCR/DBCR                       | 指令/数据地址断点控制   |
7. 通用寄存器
   | 通用寄存器 | 作用                                                                     |
   |------------+--------------------------------------------------------------------------|
   | r0         | 在函数开始时使用                                                         |
   | r1         | 堆栈指针，也就是esp                                                      |
   | r2         | 内容表指针，idapro把这个寄存器反汇编标识为rtoc，系统调用时包含系统调用号 |
   | r3         | 作为第一个参数和返回值                                                   |
   | r4-r10     | 函数或系统调用开始的参数                                                 |
   | r11        | 用在指针的调用或当作一些语言的环境指针                                   |
   | r12        | 用在异常处理时(动态链接器代码)                                           |
   | r13        | 保留作为系统线程id                                                       |
   | r14-r31    | 作为本地volatile变量存储                                                 |
8. 寄存器r1，r14-r31在函数调用过程中保持不变；
9. r0, r3-r12和特殊寄存器lr, ctr, xer, fpscr值在系统调用过程中会发生改变；
10. r0, r2, r11, r13可能会被交叉模块调用改变，所以函数调用时不能采用他们的值；

* idle相关内容
Reference: P8_UM
1. Architected idle states: nap, sleep, and winkle; each with increasing power saving capability(and latency).
2. HV可以执行相关idle指令静默处理器pipeline，并区分了不同级别的idle状态，每一个都有更高的enter和exit延迟；
3. 支持通用四个模式中的三个，nap，sleep和winkle，不支持doze；
4. 支持睡眠指令(fast sleep: core power on; deep sleep: core power off);
5. 睡眠指令允许L3 cache让其他core使用；
6. Power Management Idle Control Register(PMICR) SPR for idle-time Pstate control.
   - Nap Pstate
   - Sleep Pstate
   - Winkle Pstate
7. 单个线程nap/sleep/winkle
   - When a single thread enters nap, sleep, or winkle mode, thread state can be lost. 因为core可能会执行SMT线程切换，来让非idle状态的线程继续获得执行；
   - 当SMT线程切换使能时，napping thread的资源可以给其他threads来提升单个core的性能；
   - 下面寄存器内容由硬件保存并恢复：
     - SLB State
     - All Hypervisor Special Registers(includes PURR, SPURR, AMOR, UAMOR, AMR)
     - DEC
     - SPRG0-3
     - DAR
     - DSISR
     - DABR, DABRX
     - DSCR
     - All Performance Monitoring Special Registers(PMCs, SIAR, SDAR)
8. 从idle状态恢复执行，取决于中断条件一般都是从SRESET vector开始；
9. Control Register[31]，此比特由OS用来指明当前是idle还是run；PM可以用此bit避免在idle期间计数；统称为Run Latch；
