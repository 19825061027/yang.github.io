#+INCLUDE: "../../prefix.org"

#+TITLE: pmu->type

#+begin_src c
  static struct idr pmu_idr;

  static ssize_t
  type_show(struct device *dev, struct device_attribute *attr, char *page)
  {
	struct pmu *pmu = dev_get_drvdata(dev);

	return snprintf(page, PAGE_SIZE-1, "%d\n", pmu->type);
  }
  static DEVICE_ATTR_RO(type);

  static struct attribute *pmu_dev_attrs[] = {
	&dev_attr_type.attr,
	NULL,
  };
  ATTRIBUTE_GROUPS(pmu_dev);

  static struct bus_type pmu_bus = {
	.name		= "event_source",
	.dev_groups	= pmu_dev_groups,
  };
#+end_src
type & perf_event_mux_interval_ms 这两个属性是由bus通过dev_groups提供给子设备的;
#+begin_src c
  /**
   ,* bus_add_device - add device to bus
   ,* @dev: device being added
   ,*
   ,* - Add device's bus attributes.
   ,* - Create links to device's bus.
   ,* - Add the device to its bus's list of devices.
   ,*/
  int bus_add_device(struct device *dev)
  {
	struct bus_type *bus = bus_get(dev->bus);

	if (bus) {
	      device_add_groups(dev, bus->dev_groups);
	      sysfs_create_link(&bus->p->devices_kset->kobj, &dev->kobj, dev_name(dev));
	      sysfs_create_link(&dev->kobj, &dev->bus->p->subsys.kobj, "subsystem");
	      klist_add_tail(&dev->p->knode_bus, &bus->p->klist_devices);
	}
	return 0;
  }

#+end_src
